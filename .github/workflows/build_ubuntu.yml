name: Build Ubuntu

on: workflow_call

permissions:
  contents: write
  packages: write

jobs:
  build-ubuntu:
    runs-on: [self-hosted, linux, self-hosted-ubuntu, ARM64]
    steps:
      - name: Install libs needed for ubuntu build
        shell: bash
        run: |
          apt-get update -y --fix-missing
          apt-get install -y libbluetooth-dev libgpiod-dev libyaml-cpp-dev openssl libssl-dev libulfius-dev liborcania-dev libusb-1.0-0-dev libi2c-dev

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Create virtualenv
        run: |
          python3 -m venv ".venv"

      - name: Activate virtualenv
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
          echo VIRTUAL_ENV=$VIRTUAL_ENV >> $GITHUB_ENV

      - name: Upgrade python tools
        shell: bash
        run: |
          python3 -m pip install --upgrade pip
          pip install -U platformio adafruit-nrfutil
          pip install -U meshtastic --pre

      - name: Upgrade platformio
        shell: bash
        run: |
          pio upgrade

      - name: Build Ubuntu
        run: bin/build-native.sh

      - name: Get release version string
        run: echo "version=$(./bin/buildinfo.py long)" >> $GITHUB_OUTPUT
        id: version

      - name: Store binaries as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ steps.version.outputs.version }}_ubuntu_arm64.zip
          overwrite: true
          path: |
            release/meshtasticd_linux_aarch64
            bin/config-dist.yaml
